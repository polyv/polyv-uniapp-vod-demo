<template>
	<div>
		<head :title="title"></head>
		<button type="primary" @click="configString">设置加密串</button>
		<button type="primary" @click="configToken">设置token</button>
		<button type="primary" @click="setViewer">设置统计参数</button>
		<!-- 视频解码器解码类型-仅Android使用部分 -->
		<button type="danger" @click="openMediaCodec">Android：硬解开关</button>
		<!-- 渲染视图类型-仅Android使用部分-->
		<button type="danger" @click="setRenderView">Android：切换RenderView</button>
	
		<!-- 以下是视频信息部分 -->
		<div style="margin-top: 20px;">
			<button type="primary" @click="getVideoInfo" >获取视频时长与码率</button>
			<button type="primary" @click="getFileSize" >获取视频大小</button>
		</div>
		
		<!-- 以下是下载部分 -->
		<div style="margin-top: 20px;">
			<text>{{downloadlist}}</text>
			<text>{{downloadProgress}}</text>
			<button type="Dashed" @click="setDownloadCallbackInterval">下载进度回调间隔</button>
			<button type="Dashed" @click="getDownloadList" >下载视频列表</button>
			<button type="Dashed" @click="download" >添加下载任务</button>
			<button type="Dashed" @click="downloadVideo1" >开始下载视频1</button>
			<button type="Dashed" @click="stopVideo1" >停止下载视频1</button>
			<button type="Dashed" @click="startDownloadAll" >开始下载所有视频</button>
			<button type="Dashed" @click="stopDownloadAll" >停止下载所有视频</button>
			<button type="Dashed" @click="videoExit" >验证视频1存在</button>
			<button type="Dashed" @click="deleteVideo" >删除视频1</button>
			<button type="Dashed" @click="deleteAllVideo" >清空所有下载视频</button>
		</div>
	</div>
</template>

<script>
	// 首先需要通过 uni.requireNativePlugin("ModuleName") 获取 module 
	var configModule = uni.requireNativePlugin("PLV-VodUniPlugin-ConfigModule")
	var infoModule = uni.requireNativePlugin("PLV-VodUniPlugin-InfoModule")
	var downloadModule = uni.requireNativePlugin("PLV-VodUniPlugin-DownloadModule")
	
	import Head from '../../components/page-head.nvue';

	export default {
		components: {
			Head
		},	
		
		data(){
			return{
				downloadlist:"{}",
				downloadProgress:"下载进度：",
				title: '设置加密串',
			}
		},
		methods: {
			configString() {
				// 调用异步方法
				configModule.setConfig({
						'config':'CMWht3MlpVkgpFzrLNAebYi4RdQDY/Nhvk3Kc+qWcck6chwHYKfl9o2aOVBvXVTRZD/14XFzVP7U5un43caq1FXwl0cYmTfimjTmNUYa1sZC1pkHE8gEsRpwpweQtEIiTGVEWrYVNo4/o5jI2/efzA=='
				    },
					(ret) => {
						if (ret.isSuccess == true) {
							uni.showToast({
								title:'设置加密串成功',
								icon: "none"
							})
						} else {
							let errMsg = ret.errMsg;
							uni.showToast({
								title:'设置加密串失败：' + errMsg,
								icon: "none"
							})
						}
					})
			},
			configToken() {
				// 调用异步方法
				configModule.setToken({
						'userid': '',
						'readtoken': '',
						'writetoken': '',
						'secretkey': ''
				    },
					(ret) => {
						if (ret.isSuccess == true) {
							uni.showToast({
								title:'设置token成功',
								icon: "none"
							})
						} else {
							let errMsg = ret.errMsg;
							uni.showToast({
								title:'设置token失败：' + errMsg,
								icon: "none"
							})
						}
					})
			},
			setViewer() {
			    configModule.setViewerId({
				    'viewerId':'uni-12312323456'
				})
			    configModule.setViewerName({
				    'viewerName':'Polyv uni-app user'
				})
			    configModule.setViewerInfo({
				    'param3':'我是自定义参数1',
					'param4':'我是自定义参数2',
					'param5':'我是自定义参数3'
				})	
			},
			//Android适用的配置--start
			openMediaCodec(){
				configModule.openMediaCodec({mediaCodec:true})
			},
			setRenderView(){
				configModule.openMediaCodec({renderViewType:1})
			},
			//---end
			
			//----信息模块
			getVideoInfo(){
				infoModule.getVideoInfo({vid:'c538856dde5bf6a7419dfeece53f83af_c'}, result =>{
					if (result.errMsg == null) {
						uni.showToast({
							title:'视频时长为'+result.duration+'秒 码率为'+result.levelNum,
							icon: "none"
						})
					} else {
						uni.showToast({
							title:result.errMsg,
							icon: "none"
						})
					}
				});
			},
			getFileSize(){
				infoModule.getFileSize({vid:'c538856dde5bf6a7419dfeece53f83af_c', level:2}, result =>{
					if (result.errMsg == null) {
					    uni.showToast({
						    title:'视频大小为'+result.fileSize+'字节',
						    icon: "none"
					    })
					} else {
						uni.showToast({
							title:result.errMsg,
							icon: "none"
						})
					}
				});
			},
			
			//----下载
			setDownloadCallbackInterval(){
				downloadModule.setDownloadCallbackInterval({seconds:0.5})
			},
			
			//获取下载列表
			getDownloadList(){
				var that = this;
				downloadModule.getDownloadList(null, result =>{
					console.log(result)
					that.downloadlist = JSON.stringify(result);
				})
			},
			
			//下载测试
			download(){
				var that = this;
				var downloadParam = {
							downloadArr:[
								{
									vid:  'c538856dde5bf6a7419dfeece53f83af_c',
									level: 1
								},
								{
									vid:  'c538856dde15415e39e4cb68627cf758_c',
									level: 1
								}
							]};
									
				downloadModule.addDownloader(downloadParam, result => {
					console.log(result)
					that.downloadProgress = "\n"+JSON.stringify(result)
				})
			},
			
			downloadVideo1(){
				downloadModule.startDownloader({vid:'c538856dde5bf6a7419dfeece53f83af_c'}, result =>{
					if (result.errMsg) {
						uni.showToast({
							title:'开始下载视频失败：'+result.errMsg,
							icon: "none"
						})
					}
				});
				
			},
			
			stopVideo1(){
				downloadModule.stopDownloader({vid:'c538856dde5bf6a7419dfeece53f83af_c'}, result =>{
					if (result.errMsg) {
						uni.showToast({
							title:'停止下载视频失败：'+result.errMsg,
							icon: "none"
						})
					}
				});
			},
			
			startDownloadAll(){
				downloadModule.startAllDownloader();
				uni.showToast({
					title:'start download all video',
					icon: "none"
				})
			},
			
			stopDownloadAll(){
				downloadModule.stopAllDownloader();
				uni.showToast({
					title:'stop download all video',
					icon: "none"
				})
			},
			
			videoExit(){
				let ret = downloadModule.isVideoExist({vid:'c538856dde5bf6a7419dfeece53f83af_c', level:1})
				if (ret.exist == null) {
					let errMsg = ret.errMsg ? ret.errMsg : '获取失败'
					uni.showToast({
						title:errMsg,
						icon: "none"
					})
				} else {
					let exist = ret.exist ? "存在" : "不存在"
					uni.showToast({
						title:'视频'+exist,
						icon: "none"
					})
				}
			},
			
			deleteVideo(){
				downloadModule.deleteVideo({vid:'c538856dde5bf6a7419dfeece53f83af_c'}, result =>{
					if (result.errMsg) {
						uni.showToast({
							title:'删除视频失败：'+result.errMsg,
							icon: "none"
						})
					}
				});
			},
			
			deleteAllVideo(){
				downloadModule.deleteAllVideo();
				uni.showToast({
					title:'delete all download video',
					icon: "none"
				})
			},
		}
	}
</script>